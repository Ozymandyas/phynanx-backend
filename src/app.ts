/**
 * Add middlewares and add routes
 */

import express from 'express'
import cors from 'cors'
// Swagger
import swaggerUI from 'swagger-ui-express'
import swaggerJsDoc from 'swagger-jsdoc'
import { options } from './config/swagger/swaggerOptions'

// import taskRoutes from './routes/tasks.routes'
import helmet from 'helmet'
import logger from './config/logger/morgan'
import compression from 'compression'

const app = express()

app.set('port', process.env.PORT || 8080)

// Middlewares

app.use(compression())
app.disable('x-powered-by')
app.use(
  helmet({
    contentSecurityPolicy: false,
    dnsPrefetchControl: false,
    ieNoOpen: false,
    referrerPolicy: false,
    xssFilter: false,
  })
)
app.use(express.json())
app.use(express.urlencoded({ extended: true }))
app.use(
  cors({
    origin: ['http://localhost:3000'],
    credentials: true,
  })
)
app.use(logger)

// options for swagger

const specs = swaggerJsDoc(options)

const optionsUI = {
  customCss: '.swagger-ui .topbar { display: none }',
  customSiteTitle: 'Phynanx API',
  // customfavIcon: '/assets/favicon.ico',
}

// Routes

// import routesPartsSociales from './api/v1/routes/routes'
// app.use('/api/v1', routesFrance)

import routesAccount from './api/v1/routes/account/generatorAPI.route'
// route for generating api Keys
app.use('/api/v1/', routesAccount)

//route for documentation generated by Swagger
app.use('/docs', swaggerUI.serve, swaggerUI.setup(specs, optionsUI))

export default app
